"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLocaleDayjsValue = exports.getDefaultWeekStart = exports.isDisabledDate = exports.getAvailableDayjsLength = exports.isTimeArrayChange = void 0;
var dayjs_1 = __importDefault(require("dayjs"));
var is_1 = require("../_util/is");
function getFormat(time) {
    return (0, is_1.isDayjs)(time) && time.format('HH:mm:ss');
}
function isTimeArrayChange(prevTime, nextTime) {
    return (getFormat(prevTime[0]) !== getFormat(nextTime[0]) ||
        getFormat(prevTime[1]) !== getFormat(nextTime[1]));
}
exports.isTimeArrayChange = isTimeArrayChange;
function getAvailableDayjsLength(value) {
    if (!value) {
        return 0;
    }
    if ((0, is_1.isArray)(value)) {
        if ((0, is_1.isDayjs)(value[0]) && (0, is_1.isDayjs)(value[1])) {
            return 2;
        }
        if (!(0, is_1.isDayjs)(value[0]) && !(0, is_1.isDayjs)(value[1])) {
            return 0;
        }
        return 1;
    }
    return 0;
}
exports.getAvailableDayjsLength = getAvailableDayjsLength;
function isDisabledDate(date, disabledDate, mode, originMode) {
    if (typeof disabledDate !== 'function') {
        return false;
    }
    if (!originMode || originMode === mode) {
        return disabledDate(date);
    }
    return disabledDate(date.startOf(mode)) && disabledDate(date.endOf(mode));
}
exports.isDisabledDate = isDisabledDate;
function getDefaultWeekStart(dayjsLocale) {
    var _a, _b;
    return ((_b = (_a = dayjs_1.default.Ls) === null || _a === void 0 ? void 0 : _a[dayjsLocale]) === null || _b === void 0 ? void 0 : _b.weekStart) || 0;
}
exports.getDefaultWeekStart = getDefaultWeekStart;
function getLocaleDayjsValue(date, dayjsLocale) {
    return date ? date.locale(dayjsLocale) : date;
}
exports.getLocaleDayjsValue = getLocaleDayjsValue;
